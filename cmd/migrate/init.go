package main

import (
	"log"
	"os"
	"strings"

	"github.com/spf13/cobra"
)

const migrator = `DO_NOT_EDIT_WARNING

package main

import (
	"database/sql"

	_ "github.com/mattn/go-sqlite3"
	"github.com/tmus/exodus"
)

var migrations []exodus.Migration = []exodus.Migration{} // END OF MIGRATIONS

func main() {
	db, err := sql.Open("sqlite3", "./database.db")
	if err != nil {
		panic(err)
	}
	defer db.Close()

	migrator, err := exodus.NewMigrator(db)
	if err != nil {
		panic(err)
	}

	if err := migrator.Run(migrations...); err != nil {
		panic(err)
	}
}
`

var initCmd = &cobra.Command{
	Use:   "init",
	Short: "Creates a migration directory and runner if it does not already exist",
	Run: func(cmd *cobra.Command, args []string) {
		err := os.Mkdir("./migrations", 0755)
		if err != nil {
			// Catch if file exists. Might make a -f flag to wipe and start again.
			log.Fatalln(err)
		}

		if err := os.WriteFile("./migrations/run.go", generateMigrator(), 0755); err != nil {
			log.Fatalln(err)
		}
	},
}

func generateMigrator() []byte {
	return []byte(strings.Replace(migrator, "DO_NOT_EDIT_WARNING", "// Code generated by Exodus [https://github.com/tmus/exodus]. DO NOT EDIT.", 1))
}
